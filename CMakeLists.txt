#
cmake_minimum_required(VERSION 3.6)

# set the project name and version
project(ConfigurableGA VERSION 1.0)

# set the project name and version
project(IOHexperimenter VERSION 1.0)
SET(EXECUTABLE_OUTPUT_PATH "./")

# add the executable
add_executable(main run/main.cpp)

# specify the C++ standard
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# specify the CXX FLAGS
set(CMAKE_CXX_FLAGS "-g -std=c++11 -Wall -Wno-unused-variable -Wno-unused-function")

# set source file directorys and prepare for adding libraries.
SET(GA_SRC "algorithm/ga/src/")
FILE (GLOB GA_SRC_CPP "${GA_SRC}/*.cpp")
FILE (GLOB GA_SRC_INCLUDE "${GA_SRC}/*.h")

SET(GA_INS "algorithm/ga/instance/")
FILE (GLOB GA_INS_CPP "${GA_INS}/*.cpp")
FILE (GLOB GA_INS_INCLUDE "${GA_INS}/*.h")

SET(EDA_SRC "algorithm/eda/")
FILE (GLOB EDA_SRC_CPP "${EDA_SRC}/*.cpp")
FILE (GLOB EDA_SRC_INCLUDE "${EDA_SRC}/*.h")

SET(FEA_SRC "algorithm/fea/")
FILE (GLOB FEA_SRC_CPP "${FEA_SRC}/*.cpp")
FILE (GLOB FEA_SRC_INCLUDE "${FEA_SRC}/*.h")

SET(GHC_SRC "algorithm/ghc/")
FILE (GLOB GHC_SRC_CPP "${GHC_SRC}/*.cpp")
FILE (GLOB GHC_SRC_INCLUDE "${GHC_SRC}/*.h")

SET(RS_SRC "algorithm/rs/")
FILE (GLOB RS_SRC_CPP "${RS_SRC}/*.cpp")
FILE (GLOB RS_SRC_INCLUDE "${RS_SRC}/*.h")

SET(SA_SRC "algorithm/sa/")
FILE (GLOB SA_SRC_CPP "${SA_SRC}/*.cpp")
FILE (GLOB SA_SRC_INCLUDE "${SA_SRC}/*.h")

SET(PROBLEMS_BBOB_DIR "IOH/src/Problems/BBOB")
FILE (GLOB PROBLEMS_BBOB_SRC "${PROBLEMS_BBOB_DIR}/*.hpp")
FILE (GLOB PROBLEMS_BBOB_INCLUDE "${PROBLEMS_BBOB_DIR}/*.hpp")

SET(PROBLEMS_BBOB_COMMON_DIR "IOH/src/Problems/BBOB/bbob_common_used_functions")
FILE (GLOB PROBLEMS_BBOB_COMMON_SRC "${PROBLEMS_BBOB_COMMON_DIR}/*.cpp" "${PROBLEMS_BBOB_COMMON_DIR}/*.hpp")
FILE (GLOB PROBLEMS_BBOB_COMMON_INCLUDE "${PROBLEMS_BBOB_COMMON_DIR}/*.hpp")

SET(PROBLEMS_COMMON_DIR "IOH/src/Problems/common_used_functions")
FILE (GLOB PROBLEMS_COMMON_SRC  "${PROBLEMS_COMMON_DIR}/*.hpp" )
FILE (GLOB PROBLEMS_COMMON_INCLUDE  "${PROBLEMS_COMMON_DIR}/*.hpp" )

SET(PROBLEMS_PBO_DIR "IOH/src/Problems/PBO")
FILE (GLOB PROBLEMS_PBO_SRC "${PROBLEMS_PBO_DIR}/*.hpp" )
FILE (GLOB PROBLEMS_PBO_INCLUDE "${PROBLEMS_PBO_DIR}/*.hpp" )

SET(PROBLEMS_WMODEL_DIR "IOH/src/Problems/WModel")
FILE (GLOB PROBLEMS_WMODEL_SRC  "${PROBLEMS_WMODEL_DIR}/*.hpp")
FILE (GLOB PROBLEMS_WMODEL_INCLUDE  "${PROBLEMS_WMODEL_DIR}/*.hpp")

SET(SUITES_DIR "IOH/src/Suites")
FILE (GLOB SUITES_SRC "${SUITES_DIR}/*.h" "${SUITES_DIR}/*.hpp")
FILE (GLOB SUITES_INCLUDE "${SUITES_DIR}/*.h" "${SUITES_DIR}/*.hpp")

SET(TEMPLATE_DIR "IOH/src/Template")
FILE (GLOB TEMPLATE_SRC "${TEMPLATE_DIR}/*.cpp" "${TEMPLATE_DIR}/*.hpp" "${TEMPLATE_DIR}/*.h")
#aux_source_directory(src/Template/ DIR_TEMP)
FILE (GLOB TEMPLATE_INCLUDE "${TEMPLATE_DIR}/*.h" "${TEMPLATE_DIR}/*.hpp")

SET(TEMPLATE_EXPERIMENTS_DIR "IOH/src/Template/Experiments")
FILE (GLOB TEMPLATE_EXPERIMENTS_SRC "${TEMPLATE_EXPERIMENTS_DIR}/*.hpp" "${TEMPLATE_EXPERIMENTS_DIR}/*.cpp")
FILE (GLOB TEMPLATE_EXPERIMENTS_INCLUDE "${TEMPLATE_EXPERIMENTS_DIR}/*.h" "${TEMPLATE_EXPERIMENTS_DIR}/*.hpp")

SET(TEMPLATE_LOGGERS_DIR "IOH/src/Template/Loggers")
FILE (GLOB TEMPLATE_LOGGERS_SRC "${TEMPLATE_LOGGERS_DIR}/*.cpp" "${TEMPLATE_LOGGERS_DIR}/*.hpp")
FILE (GLOB TEMPLATE_LOGGERS_INCLUDE "${TEMPLATE_LOGGERS_DIR}/*.h" "${TEMPLATE_LOGGER_DIR}/*.hpp")

SET(IOHEXPERIMENTER_SRC
  "${PROBLEMS_COMMON_SRC}"
  "${PROBLEMS_BBOB_SRC}"
  "${PROBLEMS_BBOB_COMMON_SRC}"
  "${PROBLEMS_PBO_SRC}"
  "${PROBLEMS_WMODEL_SRC}"
  "${SUITES_SRC}"
  "${TEMPLATE_SRC}"
  "${TEMPLATE_EXPERIMENTS_SRC}"
  "${TEMPLATE_LOGGERS_SRC}"
)

SET(IOHEXPERIMENTER_DIR
  "${PROBLEMS_COMMON_DIR}"
  "${PROBLEMS_BBOB_DIR}"
  "${PROBLEMS_BBOB_COMMON_DIR}"
  "${PROBLEMS_PBO_DIR}"
  "${PROBLEMS_WMODEL_DIR}"
  "${SUITES_DIR}"
  "${TEMPLATE_DIR}"
  "${TEMPLATE_EXPERIMENTS_DIR}"
  "${TEMPLATE_LOGGERS_DIR}"
)

SET(IOHEXPERIMENTER_INCLUDE
  "${PROBLEMS_COMMON_INCLUDE}"
  "${PROBLEMS_BBOB_INCLUDE}"
  "${PROBLEMS_BBOB_COMMON_INCLUDE}"
  "${PROBLEMS_PBO_INCLUDE}"
  "${PROBLEMS_WMODEL_INCLUDE}"
  "${SUITES_INCLUDE}"
  "${TEMPLATE_INCLUDE}"
  "${TEMPLATE_EXPERIMENTS_INCLUDE}"
  "${TEMPLATE_LOGGERS_INCLUDE}"
)

SET(ALGORITHM_DIR
  "${GA_SRC}"
  "${GA_INS}"
  "${SA_SRC}"
  "${GHC_SRC}"
  "${RS_SRC}"
  "${FEA_INS}"
  "${EDA_SRC}"
)

SET(ALGORITHM_CPP
  "${GA_SRC_CPP}"
  "${GA_INS_CPP}"
  "${SA_SRC_CPP}"
  "${GHC_SRC_CPP}"
  "${RS_SRC_CPP}"
  "${FEA_SRC_CPP}"
  "${EDA_SRC_CPP}"
)

SET(ALGORITHM_INCLUDE
  "${GA_SRC_INCLUDE}"
  "${GA_INS_INCLUDE}"
  "${SA_SRC_INCLUDE}"
  "${GHC_SRC_INCLUDE}"
  "${RS_SRC_INCLUDE}"
  "${FEA_INS_INCLUDE}"
  "${EDA_SRC_INCLUDE}"
)

include_directories(${ALGORITHM_DIR} ${IOHEXPERIMENTER_DIR} )

# add the IOH library
add_library(configGA ${ALGORITHM_CPP} ${IOHEXPERIMENTER_SRC})

target_link_libraries(main configGA)

# install. set name of the installed library as 'IOH'.
install (TARGETS configGA DESTINATION lib)
install (FILES ${ALGORITHM_INCLUDE} ${IOHEXPERIMENTER_INCLUDE} DESTINATION include)
